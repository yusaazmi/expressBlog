"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var query_generator_internal_exports = {};
__export(query_generator_internal_exports, {
  SnowflakeQueryGeneratorInternal: () => SnowflakeQueryGeneratorInternal
});
module.exports = __toCommonJS(query_generator_internal_exports);
var import_query_generator_internal = require("../abstract/query-generator-internal.js");
const TECHNICAL_SCHEMA_NAMES = Object.freeze(["INFORMATION_SCHEMA", "PERFORMANCE_SCHEMA", "SYS", "information_schema", "performance_schema", "sys"]);
class SnowflakeQueryGeneratorInternal extends import_query_generator_internal.AbstractQueryGeneratorInternal {
  getTechnicalSchemaNames() {
    return TECHNICAL_SCHEMA_NAMES;
  }
  addLimitAndOffset(options) {
    let fragment = "";
    if (options.limit != null) {
      fragment += ` LIMIT ${this.queryGenerator.escape(options.limit, options)}`;
    } else if (options.offset) {
      fragment += ` LIMIT NULL`;
    }
    if (options.offset) {
      fragment += ` OFFSET ${this.queryGenerator.escape(options.offset, options)}`;
    }
    return fragment;
  }
}
//# sourceMappingURL=query-generator-internal.js.map

{
  "version": 3,
  "sources": ["../../../src/dialects/sqlite/query-generator-internal.ts"],
  "sourcesContent": ["import { AbstractQueryGeneratorInternal } from '../abstract/query-generator-internal.js';\nimport type { AddLimitOffsetOptions } from '../abstract/query-generator.types.js';\nimport type { SqliteDialect } from './index.js';\n\nexport class SqliteQueryGeneratorInternal<Dialect extends SqliteDialect = SqliteDialect>\n  extends AbstractQueryGeneratorInternal<Dialect> {\n\n  addLimitAndOffset(options: AddLimitOffsetOptions) {\n    let fragment = '';\n    if (options.limit != null) {\n      fragment += ` LIMIT ${this.queryGenerator.escape(options.limit, options)}`;\n    } else if (options.offset) {\n      // limit must be specified if offset is specified.\n      fragment += ` LIMIT -1`;\n    }\n\n    if (options.offset) {\n      fragment += ` OFFSET ${this.queryGenerator.escape(options.offset, options)}`;\n    }\n\n    return fragment;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA+C;AAIxC,MAAM,qCACH,+DAAwC;AAAA,EAEhD,kBAAkB,SAAgC;AAChD,QAAI,WAAW;AACf,QAAI,QAAQ,SAAS,MAAM;AACzB,kBAAY,UAAU,KAAK,eAAe,OAAO,QAAQ,OAAO,OAAO;AAAA,IACzE,WAAW,QAAQ,QAAQ;AAEzB,kBAAY;AAAA,IACd;AAEA,QAAI,QAAQ,QAAQ;AAClB,kBAAY,WAAW,KAAK,eAAe,OAAO,QAAQ,QAAQ,OAAO;AAAA,IAC3E;AAEA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
